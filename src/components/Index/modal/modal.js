import React, { useState, useImperativeHandle } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';
import './modal.css';

const Modal = React.forwardRef((props, ref) => {
    const [isActive, setIsActive] = useState('login');
    const [formData, setFormData] = useState({
        name: '',
        email: '', 
        password: ''
    });
    const [message, setMessage] = useState('');
    const [isModalOpen, setIsModalOpen] = useState(true);
    const navigate = useNavigate();
    const BASE_URL = 'http://31.129.111.149:5000'

    const closeModal = () => {
        console.log("Closing modal...");
        setIsModalOpen(false);
    };

    const openModal = () => {
        console.log("Opening modal...");
        setIsModalOpen(true);
    };


    useImperativeHandle(ref, () => ({
        openModal: openModal,
        closeModal: closeModal
    }));

    const handleTabChange = (tab) => {
        setIsActive(tab);
        setMessage('');
    };

    const handleInputChange = (e) => {
        setFormData({ ...formData, [e.target.name]: e.target.value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        
        if (isActive === 'login') {
            // Логика входа
            if ((formData.name || formData.email) && formData.password) {
                try {
                    const response = await axios.post(`${BASE_URL}/login`, {
                        email: formData.email,
                        password: formData.password
                    });

                    if (response.data.token) {
                        localStorage.setItem('authToken', response.data.token);
                        setMessage('Успешный вход!');
                        navigate("/main");
                    } else {
                        setMessage("Не удалось войти. Пожалуйста, попробуйте снова.");
                    }
                } catch (error) {
                    setMessage('Ошибка сервера. Пожалуйста, попробуйте снова.');
                }
            } else {
                setMessage('Пожалуйста, заполните все поля.');
            }
        } else {
            // Логика регистрации
            if (formData.name && formData.email && formData.password) {
                try {
                    const response = await axios.post(`${BASE_URL}/register`, {
                        name: formData.name,
                        email: formData.email,
                        password: formData.password
                    });

                    if (response.data.token) {
                        localStorage.setItem('authToken', response.data.token);
                        setMessage('Успешная регистрация!');
                    } else {
                        setMessage("Не удалось зарегистрироваться. Пожалуйста, попробуйте снова.");
                    }
                } catch (error) {
                    setMessage('Ошибка сервера. Пожалуйста, попробуйте снова.');
                }
            } else {
                setMessage('Пожалуйста, заполните все поля.');
            }
        }
    };



    const handleForgotPassword = () => {
        alert('contact support');
    };

    return (
        isModalOpen && (

            <div id="modal__project" className="modal" data-modal="one">
                <div className="modal-content">
                    <svg
                        className="modal-close"
                        onClick={closeModal}
                        xmlns="http://www.w3.org/2000/svg"
                        width={22}
                        height={22}
                        viewBox="0 0 22 22"
                        fill="none"
                    >
                        <path
                            d="M11 8.64331L19.25 0.393311L21.6067 2.74998L13.3567 11L21.6067 19.25L19.25 21.6066L11 13.3566L2.75001 21.6066L0.393341 19.25L8.64334 11L0.393341 2.74998L2.75001 0.393311L11 8.64331Z"
                            fill="white"
                        />
                    </svg>
                    <svg
                        className="modal-content-logo"
                        xmlns="http://www.w3.org/2000/svg"
                        width={382}
                        height={45}
                        viewBox="0 0 382 45"
                        fill="none"
                    >
                        <path
                            d="M302.571 29.232L315.779 41.3988L305.031 44.3273L298.133 39.6327L302.571 29.232ZM336.865 43.4518H344.413L348.836 31.3756L300.699 1.01903L297.318 3.44934L336.865 43.4518ZM341.243 13.4424L342.647 13.7443L343.477 4.41546L339.251 1.93981L329.318 4.82301L341.243 13.4424ZM7.01817 43.4065C8.79933 43.4065 10.4901 43.4065 12.1052 43.4065C19.8437 43.4065 25.8109 41.3686 30.0072 37.2929C32.0967 35.2786 33.7419 32.8492 34.8363 30.161C35.9308 27.4729 36.451 24.5855 36.3627 21.6844C36.5299 16.2706 34.5554 11.0093 30.8681 7.04202C26.9133 2.84554 20.8203 0.747276 12.5887 0.747276L6.55089 0.868063C4.57349 0.868063 2.70179 0.868063 0.92063 0.868063H0.135681V43.2253H0.98033C3.27471 43.3461 5.28229 43.3612 7.01817 43.4065ZM24.2413 11.5253C25.6645 12.8063 26.7849 14.3879 27.5212 16.1555C28.2574 17.923 28.5907 19.8323 28.4978 21.7448C28.5924 23.743 28.259 25.7384 27.5197 27.5973C26.7804 29.4561 25.6523 31.1355 24.2111 32.5228C21.3432 35.1796 17.3886 36.5079 12.347 36.5079C11.0187 36.5079 9.41874 36.508 7.56211 36.3872V7.97792C9.2678 7.85715 10.898 7.79678 12.4679 7.79678C17.4591 7.77665 21.3834 9.0195 24.2413 11.5253ZM102.975 43.3461H110.416V7.97792H124.152V1.01903H89.2535V7.97792H102.975V43.3461ZM137.104 32.5228H155.217L159.625 43.3461H167.549L149.647 0.868063H143.111L125.194 43.3461H132.741L137.104 32.5228ZM139.941 25.5639L146.176 10.4686L152.349 25.5639H139.941ZM204.426 36.8703H186.825C188.199 35.7381 189.18 34.8927 189.844 34.3342C191.052 33.2021 192.395 31.8284 193.844 30.2132C195.469 28.5341 196.945 26.7157 198.252 24.7789C199.554 22.8279 200.633 20.7366 201.467 18.5446C202.343 16.3267 202.813 13.9698 202.856 11.5857C202.887 10.1402 202.625 8.70345 202.085 7.36214C201.545 6.02082 200.739 4.80275 199.716 3.78144C198.551 2.64983 197.163 1.77394 195.64 1.20988C194.116 0.645822 192.492 0.405995 190.871 0.505746C187.831 0.410495 184.852 1.36466 182.433 3.20781C180.135 5.03141 178.614 7.65839 178.176 10.5592L183.988 13.1556C184.994 9.3717 187.007 7.47475 190.025 7.46468C190.761 7.4246 191.496 7.53812 192.184 7.79802C192.873 8.05793 193.5 8.45851 194.025 8.97421C195 10.0947 195.499 11.5519 195.414 13.0348C195.414 16.9395 192.898 21.7599 187.867 27.4961C186.015 29.6396 182.649 33.0864 177.768 37.8363V43.4065H204.38L204.426 36.8703ZM221.603 43.4065C223.369 43.4065 225.06 43.4065 226.675 43.4065C234.423 43.4065 240.396 41.3686 244.592 37.2929C246.679 35.2763 248.322 32.8465 249.416 30.1589C250.51 27.4713 251.032 24.585 250.947 21.6844C251.109 16.2688 249.129 11.0078 245.438 7.04202C241.483 2.84554 235.39 0.747276 227.158 0.747276L221.121 0.868063C219.143 0.868063 217.256 0.868063 215.49 0.868063H214.705V43.2253H215.551C217.845 43.3461 219.867 43.3612 221.603 43.4065ZM238.811 11.5253C240.237 12.8049 241.36 14.3858 242.099 16.1535C242.838 17.9211 243.174 19.8311 243.083 21.7448C243.178 23.7445 242.844 25.7414 242.102 27.6008C241.36 29.4601 240.227 31.1386 238.781 32.5228C235.913 35.1796 231.958 36.5079 226.917 36.5079C225.588 36.5079 224.003 36.508 222.146 36.3872V7.97792C223.837 7.85715 225.468 7.79678 227.037 7.79678C232.049 7.77665 235.973 9.0195 238.811 11.5253ZM272.186 27.4961L283.854 43.3461H292.911L279.627 26.0922C282.105 25.2249 284.239 23.5817 285.71 21.4064C287.181 19.231 287.911 16.6394 287.793 14.016C287.793 5.31109 282.671 0.953585 272.427 0.943521C270.917 0.943521 268.834 0.943521 266.389 0.943521C263.944 0.943521 261.649 0.943521 259.551 0.943521V43.3008H266.978V27.4508L272.186 27.4961ZM279.929 14.0009C279.965 14.9234 279.775 15.8408 279.378 16.6742C278.981 17.5077 278.388 18.2324 277.649 18.7861C275.958 20.0067 273.907 20.6234 271.823 20.5372H266.978V7.97792C267.657 7.97792 268.412 7.97792 269.212 7.97792C270.012 7.97792 270.722 7.97792 271.084 7.97792H272.065C277.303 7.82696 279.929 9.89501 279.929 14.016V14.0009ZM46.9886 37.9571C51.3211 41.8749 56.9601 44.0341 62.8011 44.0118C68.6421 43.9894 74.2648 41.7872 78.5672 37.8363C82.609 33.5971 84.8637 27.9644 84.8637 22.1071C84.8637 16.2497 82.609 10.6171 78.5672 6.37782C76.4715 4.36857 73.9947 2.79919 71.283 1.76218C68.5713 0.725167 65.6798 0.241508 62.7783 0.33972C59.8752 0.242095 56.9821 0.738925 54.278 1.79972C51.5739 2.86052 49.1152 4.46288 47.0528 6.50842C44.9904 8.55397 43.3679 10.9995 42.2849 13.6949C41.2018 16.3903 40.6811 19.2786 40.7548 22.1826C40.6406 25.1008 41.1363 28.0108 42.2097 30.7268C43.2831 33.4429 44.9104 35.9053 46.9886 37.9571ZM52.6196 11.4649C55.3099 8.78616 58.9517 7.28226 62.7481 7.28226C66.5445 7.28226 70.1862 8.78616 72.8765 11.4649C74.2446 12.8823 75.3143 14.5599 76.0222 16.3983C76.73 18.2367 77.0616 20.1985 76.9973 22.1674C77.129 26.0876 75.7383 29.9066 73.1175 32.8247C71.8081 34.2427 70.2039 35.3561 68.4174 36.0864C66.6308 36.8167 64.706 37.1461 62.7783 37.0514C60.8924 37.0972 59.0179 36.7443 57.2777 36.016C55.5376 35.2876 53.9704 34.2002 52.6793 32.8247C50.0823 29.8731 48.6499 26.0764 48.6499 22.1448C48.6499 18.2133 50.0823 14.4165 52.6793 11.4649H52.6196ZM366.376 28.2207C371.246 28.2207 375.035 26.8923 377.742 24.2355C379.07 22.9867 380.123 21.4743 380.832 19.795C381.542 18.1158 381.893 16.3068 381.863 14.484C381.878 12.7422 381.592 11.0109 381.017 9.3667C380.42 7.77439 379.512 6.31696 378.345 5.07961C376.928 3.64056 375.175 2.57708 373.244 1.9851C370.729 1.19711 368.104 0.819929 365.47 0.868063C363.372 0.868063 361.274 0.868063 359.176 0.868063C357.078 0.868063 355.206 0.868063 353.425 0.868063V43.2253H360.866V28.0395C362.074 28.1603 363.915 28.2207 366.376 28.2207ZM373.923 14.4236C373.98 15.3792 373.816 16.3351 373.445 17.2173C373.073 18.0995 372.504 18.8843 371.78 19.5107C370.135 20.7423 368.112 21.3615 366.059 21.2617C364.685 21.2617 362.934 21.1561 360.791 20.9598V7.97792L366.119 7.85717C371.387 7.82698 373.998 10.0309 373.998 14.4236H373.923Z"
                            fill="url(#paint0_linear_3_974)"
                        />
                        <defs>
                            <linearGradient
                                id="paint0_linear_3_974"
                                x1="15.3812"
                                y1="-12.2497"
                                x2="366.497"
                                y2="59.1749"
                                gradientUnits="userSpaceOnUse"
                            >
                                <stop stopColor="#872A86" />
                                <stop offset="0.5" stopColor="#442B86" />
                                <stop offset={1} stopColor="#A81835" />
                            </linearGradient>
                        </defs>
                    </svg>
                    <div className="modal-content-top">
                        <div
                            className={`modal-content-top-block ${isActive === 'login' ? 'modal-content-top-block-active' : ''}`}
                            onClick={() => handleTabChange('login')}
                        >                        ВОЙТИ
                        </div>
                        <div
                            className={`modal-content-top-block ${isActive === 'register' ? 'modal-content-top-block-active' : ''}`}
                            onClick={() => handleTabChange('register')}
                        >СОЗДАТЬ АККАУНТ</div>
                    </div>
                    <form action="#!" method="post" className="modal-content-form" onSubmit={handleSubmit}>
                        {isActive === 'register' && (
                            <input
                                type="text"
                                name="email"
                                required=""
                                placeholder="Почта"
                                value={formData.email}
                                onChange={handleInputChange}
                            />
                        )}

                        <input
                            type="text"
                            name={isActive === 'register' ? "name" : "email"}
                            required=""
                            placeholder={isActive === 'register' ? "Никнейм" : "Почта"}
                            value={isActive === 'register' ? formData.name : formData.email}
                            onChange={handleInputChange}
                        />

                        <input
                            type="password"
                            name="password"
                            required=""
                            placeholder="Пароль"
                            value={formData.password}
                            onChange={handleInputChange}
                        />
                        {isActive === 'login' && (
                            <p className="modal-restore">
                                Забыли пароль? <a href="#!" onClick={handleForgotPassword}>Восстановить</a>
                            </p>
                        )}
                        <button type="submit">{isActive === 'login' ? "Войти в аккаунт" : "Создать аккаунт"}</button>
                        <p className="modal-content-form-bottom">
                            Создавая аккаунт в "Название" вы соглашаетесь с{" "}
                            <a href="#!">пользовательским соглашением</a>
                        </p>
                        {message && <p>{message}</p>}
                    </form>
                </div>
            </div>
        )

    );
});

export default Modal;
